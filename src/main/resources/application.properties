spring.application.name=HospitalManagement



spring.datasource.url=jdbc:postgresql://localhost:5432/hospitalManagement
spring.datasource.username=
spring.datasource.password=

# Hibernate schema generation options (spring.jpa.hibernate.ddl-auto / hbm2ddl.auto):
#
# - create-drop: Creates the database schema at startup and drops it on shutdown.
#   Use case: fast, ephemeral test environments. NOT for production — data will be lost
#   when the application stops.
#
# - create: Creates the schema on startup. Useful during early development to
#   generate tables automatically. NOT for production — it may overwrite or drop
#   existing data depending on the database and setup.
#
# - update: Attempts to alter the database schema to match the entity model.
#   It is non-destructive for some simple changes but may not handle complex
#   migrations (renames, column type changes) safely. Use with caution in
#   production — prefer explicit migration scripts.
#
# - validate: Compares the entity mappings to the existing schema and fails
#   application startup if there are mismatches. This is safe for production
#   because it does not change the schema; it only ensures the model matches the
#   database. It helps detect accidental desynchronization between code and schema.
#
# - none: Disables any automatic schema generation (equivalent to not setting
#   the property). Use this when schema is fully managed outside the application
#   (recommended for production when using migration tools).
#
# Recommendation for production:
# - Prefer 'validate' or 'none' and manage schema changes via a dedicated
#   migration tool such as Flyway or Liquibase. This prevents accidental data
#   loss and gives you controlled, versioned migrations. 'validate' will catch
#   mismatches at startup; 'none' is the safest when you don't want the app to
#   perform any schema checks/changes.

spring.jpa.hibernate.ddl-auto=create-drop

spring.jpa.show-sql=true
# display query generated by hibernate

spring.jpa.properties.hibernate.format_sql=false
#format the query generated by hibernate in human-readable format


spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always
spring.sql.init.data-location=classpath:data.sql